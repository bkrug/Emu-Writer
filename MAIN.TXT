       DEF  START
*
       REF  VSBW,KSCAN,VMBW
	   REF  KEYDVC,KEYPRS,USRISR
	   REF  NOKEY
	   REF  KEYINT
	   REF  KEYSTR,KEYEND,KEYWRT,KEYRD
	   REF  MEMBEG,MEMEND
	   REF  INPUT,WRAP,POSUPD,DISP
	   REF  PARINX
	   REF  BUFINT,BUFALC,BUFCPY
	   REF  ARYALC,ARYADD
	   REF  LINLST,MGNLST,FMTLST
	   REF  VDPTXT
*
       REF  VMBW
	   
START
* Initialize Program
       BL   @INTMEM
       BL   @INTKEY
	   BL   @VDPTXT
	   LIMI 2
*
* Main program loop while program runs
*
MAIN
* Clear the document status register
       CLR  R0
* Process user input
	   BLWP @INPUT
* Wrap the current paragraph
	   MOV  R0,R1
	   MOV  @PARINX,R0
	   BLWP @WRAP
	   MOV  R1,R0
* Update cursor and window positions
	   BLWP @POSUPD
* Redisplay the screen
       LIMI 0
	   BLWP @DISP
	   LIMI 2
*
	   JMP  MAIN

*
	   LI   R0,0
	   LI   R1,MSG
	   LI   R2,MSGEND-MSG
	   BLWP @VMBW
LOOP   JMP  LOOP
MSG    TEXT 'GOT HERE'
MSGEND EVEN

*
* Initialize Memory
*
INTMEM
* Initialize buffer.
       LI   R0,MEMBEG
       LI   R1,MEMEND
       S    R0,R1
       BLWP @BUFINT
* Reserve space for margin and format
* and paragraph list.
       LI   R0,3
       BLWP @ARYALC
       MOV  R0,@FMTLST
       LI   R0,3
       BLWP @ARYALC
       MOV  R0,@MGNLST
       LI   R0,1
       BLWP @ARYALC
       MOV  R0,@LINLST
* Insert one empty paragraph
* Let R4 = paragraph address
       LI   R0,PAREND-PAR
       MOV  R0,R2
       BLWP @BUFALC
	   MOV  R0,R4
       MOV  R0,R1
       LI   R0,PAR
       BLWP @BUFCPY
* Insert one empty wrap list, and
* place address inside paragraph object
       LI   R0,1
       BLWP @ARYALC
       MOV  R0,@2(4)
* Put the paragraph into the
* paragraph list
       MOV  @LINLST,R0
       BLWP @ARYADD
       MOV  R0,@LINLST
       MOV  R4,*R1
*
       RT

* Default paragraph
PAR    DATA 0
       BSS  2
       TEXT ''
PAREND

*
* Initialize Key Scanning
*
INTKEY
* Define the buffer locations
       LI   R0,KEYSTR
       MOV  R0,@KEYWRT
	   MOV  R0,@KEYRD
* Define the interupt routine
       LI   R0,KEYINT
       MOV  R0,@USRISR
* Specify whole keyboard
       CLR  R0
       MOVB R0,@KEYDVC
* Ignore keys pressed before
* running the program
       MOVB @NOKEY,@KEYPRS
       RT

       END