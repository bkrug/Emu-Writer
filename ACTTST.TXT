       DEF  TSTLST,RSLTFL
*
       REF  LINLST
	   REF  PARINX,CHRPAX,LININX
* Assert methods
       REF  AEQ
* Tested methods
       REF  UPUPSP,DOWNSP

TSTLST DATA TSTEND-TSTLST-2/8
* Move from 3rd to 2nd line
       DATA UP1
       TEXT 'UP1   '
* Move from 2nd to 1st line
       DATA UP2
       TEXT 'UP2   '
* Move from bottom line
       DATA UP3
       TEXT 'UP3   '
* Move to previous paragraph
       DATA UP4
       TEXT 'UP4   '
* Move up to one-line paragraph
       DATA UP5
       TEXT 'UP5   '
TSTEND
RSLTFL BYTE RSLTFE-RSLTFL-1
       TEXT 'DSK2.TESTRESULT.TXT'
RSLTFE
       EVEN
FRAMRT DATA 0

**** Mock document ****

DOC1   DATA 4,1
       DATA PAR1A,PAR1B,PAR1C,PAR1D
PAR1A  DATA 403
       DATA WRP1A
       TEXT 'Beg..End'
WRP1A  DATA 3,1
       DATA 56
	   DATA 56+60
	   DATA 56+61+59
PAR1B  DATA 32
       DATA WRP1B
	   TEXT 'Beg..End'
WRP1B  DATA 0,1
PAR1C  DATA 61+57+48+56+60
       DATA WRP1C
	   TEXT 'Beg..End'
WRP1C  DATA 4,1
       DATA 61
	   DATA 61+57
	   DATA 61+57+48
	   DATA 61+57+48+56
PAR1D  DATA 57+58+40
       DATA WRP1D
	   TEXT 'Beg..End'
WRP1D  DATA 2,1
       DATA 57
	   DATA 57+58

PARM   TEXT 'Paragraph index is wrong.'
PARME
CHRM   TEXT 'Character index within '
       TEXT 'paragraph is wrong.'
CHRME
LINM   TEXT 'Line index within '
       TEXT 'paragraph is wrong.'
LINME  EVEN

*
* Move from third to second line in the
* same paragraph.
* Upper line is long enough so that
* cursor need not move left.
*
UP1    MOV  R11,@FRAMRT
* Arrange
       LI   R0,DOC1
       MOV  R0,@LINLST
	   LI   R0,2
	   MOV  R0,@PARINX
	   LI   R0,61+57+40
	   MOV  R0,@CHRPAX
* Act
       BL   @UPUPSP
* Assert
       LI   R0,2
	   MOV  @PARINX,R1
	   LI   R2,PARM
	   LI   R3,PARME-PARM
       BLWP @AEQ
*
       LI   R0,61+40
	   MOV  @CHRPAX,R1
	   LI   R2,CHRM
	   LI   R3,CHRME-CHRM
	   BLWP @AEQ
*
       MOV  @FRAMRT,R11
	   RT

*
* Move from second to first line in the
* same paragraph.
* Upper line is long enough so that
* cursor need not move left.
*
UP2    MOV  R11,@FRAMRT
* Arrange
       LI   R0,DOC1
       MOV  R0,@LINLST
	   LI   R0,2
	   MOV  R0,@PARINX
	   LI   R0,61+25
	   MOV  R0,@CHRPAX
* Act
       BL   @UPUPSP
* Assert
       LI   R0,2
	   MOV  @PARINX,R1
	   LI   R2,PARM
	   LI   R3,PARME-PARM
       BLWP @AEQ
*
       LI   R0,25
	   MOV  @CHRPAX,R1
	   LI   R2,CHRM
	   LI   R3,CHRME-CHRM
	   BLWP @AEQ
*
       MOV  @FRAMRT,R11
	   RT

*
* Move from bottom to second from
* bottom line in the same paragraph.
* Upper line is long enough so that
* cursor need not move left.
*
UP3    MOV  R11,@FRAMRT
* Arrange
       LI   R0,DOC1
       MOV  R0,@LINLST
	   LI   R0,2
	   MOV  R0,@PARINX
	   LI   R0,61+57+48+56+3
	   MOV  R0,@CHRPAX
* Act
       BL   @UPUPSP
* Assert
       LI   R0,2
	   MOV  @PARINX,R1
	   LI   R2,PARM
	   LI   R3,PARME-PARM
       BLWP @AEQ
*
       LI   R0,61+57+48+3
	   MOV  @CHRPAX,R1
	   LI   R2,CHRM
	   LI   R3,CHRME-CHRM
	   BLWP @AEQ
*
       MOV  @FRAMRT,R11
	   RT

*
* Move from one paragraph to previous
* paragraph.
* Upper line is long enough so that
* cursor need not move left.
*
UP4    MOV  R11,@FRAMRT
* Arrange
       LI   R0,DOC1
       MOV  R0,@LINLST
	   LI   R0,3
	   MOV  R0,@PARINX
	   LI   R0,15
	   MOV  R0,@CHRPAX
* Act
       BL   @UPUPSP
* Assert
       LI   R0,2
	   MOV  @PARINX,R1
	   LI   R2,PARM
	   LI   R3,PARME-PARM
       BLWP @AEQ
*
       LI   R0,61+57+48+56+15
	   MOV  @CHRPAX,R1
	   LI   R2,CHRM
	   LI   R3,CHRME-CHRM
	   BLWP @AEQ
*
       MOV  @FRAMRT,R11
	   RT

*
* Move up to one-line paragraph.
* Upper line is long enough so that
* cursor need not move left.
*
UP5    MOV  R11,@FRAMRT
* Arrange
       LI   R0,DOC1
       MOV  R0,@LINLST
	   LI   R0,2
	   MOV  R0,@PARINX
	   LI   R0,5
	   MOV  R0,@CHRPAX
* Act
       BL   @UPUPSP
* Assert
       LI   R0,1
	   MOV  @PARINX,R1
	   LI   R2,PARM
	   LI   R3,PARME-PARM
       BLWP @AEQ
*
       LI   R0,5
	   MOV  @CHRPAX,R1
	   LI   R2,CHRM
	   LI   R3,CHRME-CHRM
	   BLWP @AEQ
*
       MOV  @FRAMRT,R11
	   RT

       END