       DEF  DISP
* Mocked methods
       REF  VDPADR,VDPWRT
*
       REF  DISPWS
       REF  LINLST,FMTLST,MGNLST
       REF  PARINX
       REF  WINOFF,WINPAR,WINLIN
       REF  STSTYP,STSENT,STSPAR,STSWIN
       REF  ERRMEM

SPACE  TEXT '                                    '
SCRNWD EQU  40
FORTY  DATA 40

       TEXT 'DISP'
DISP   DATA DISPWS,DISP+4

*
* If cursor's paragraph is at top of
* screen, then set VDP address to 0.
*
       CLR  R0
       BL   @VDPADR
       C    @WINPAR,@PARINX
	   JEQ  DISP3

*
* Calculate the number of rows at the
* top of the screen that don't need to
* be rewritten. Put the result in R2.
*
       MOV  @WINPAR,R1
* Let R2 total screen rows to skip
       MOV  @WINLIN,R2
       NEG  R2
* Let R3 = paragraph address
DISP2  MOV  R1,R3
       BL   @PARADR
* Let R3 = wrap list address
       INCT R3
       MOV  *R3,R3
* Add paragraph length to row count
       A    *R3,R2
       INC  R2
* Keep going until we reach the
* cursor's paragraph
       INC  R1
       C    R1,@PARINX
       JL   DISP2
       
*
* Set VDP write address so that the
* routine can redraw the current
* paragraph.
*
* Let R0 = R2 * screen width
       MPY  @FORTY,R2
       MOV  R3,R0
* Set VDP write address
       BL   @VDPADR
       
*
* Redraw the rows for one paragraph of
* text.
*
* Let R2 = starting paragraph-line
DISP3  CLR  R2
       C    @WINPAR,@PARINX
	   JNE  DISP4
       MOV  @WINLIN,R2
* Let R3 = address of cursor's paragraph
DISP4  MOV  @PARINX,R3
       BL   @PARADR
* Let R3 = address of paragraph text
* Let R4 = length of paragraph
* Let R5 = address two bytes prior to
*          wrap list's first element
* Let R6 = length of wrap list
       MOV  *R3+,R4
       MOV  *R3+,R5
       MOV  *R5+,R6
* If starting with first paragraph-line,
* ignore wrap list for one cycle.
       MOV  R2,R0
	   JEQ  DISP6
* Adjust R5 and R6 based on the 
* starting paragraph-line.
       S    R2,R6
	   A    R2,R5
	   A    R2,R5
* Write a row of text
DISP5  MOV  *R5,R0
DISP6  INCT R5
       A    R3,R0
       LI   R1,SCRNWD
       BL   @VDPWRT
* Check if this is last paragraph-line
       DEC  R6
       JH   DISP5
* Let R4 be the lesser of these:
* - length of last line
* - screen width
       S    *R5,R4
       CI   R4,SCRNWD
	   JLE  DISP7
       LI   R4,SCRNWD
* Write last row's text.
DISP7  MOV  *R5,R0
       A    R3,R0
       MOV  R4,R1
       BL   @VDPWRT
* Write trailing spaces
       MOV  R4,R1
       NEG  R1
       AI   R1,SCRNWD
	   JEQ  DISP9
       LI   R0,SPACE
       BL   @VDPWRT
*
DISP9  RTWP

*
* Get paragraph address from index
*
* Input:
* R3 - paragraph index
* Output:
* R3 - paragraph address
PARADR SLA  R3,1
       A    @LINLST,R3
       C    *R3+,*R3+
       MOV  *R3,R3
       RT

       END