       DEF  WRAP
       REF  LINLST,FMTLST,MGNLST
       REF  BUFALC,BUFCPY,BUFREE

WORKSP BSS  >20

* Maximum width of a 4 inch line
LNWDTH DATA 120*4
* Character Width in n/120-inch
* 10 cpi
CPI10  DATA 12

* Index within Line List of line being
* wrapped
WRPLN  DATA 0

*
SPACE  TEXT ' '
DASH   TEXT '-'
LF     BYTE 10
CR     BYTE 13
       EVEN

*
* Wrap
*
* Input:
* R0 - Line index. Wrap from here.
* Output:
* R0 - >FFFF implies an error.
WRAP   DATA WORKSP,WRAP+4
*
* Get index of starting line.
       MOV  *R13,@WRPLN
* Find Characters Per Line
       CLR  R2
       MOV  @LNWDTH,R3
       DIV  @CPI10,R2
       MOV  R2,@CPL
* Unify a paragraph
       BL   @UNIPAR
*
       MOV  @UNIADR,R10
*
WRAP2  BL   @FNDBRK
       BL   @DELLIN
       BL   @MAKLIN
       INC  @WRPLN
       A    R2,R10
       C    R10,@UNIEND
       JL   WRAP2
*
       MOV  @UNIADR,R0
       BLWP @BUFREE
       BL   @RMXTRA
*
       RTWP

*
* Unify the remainder of a paragraph
* into one line.
*
UNIPAR MOV  @WRPLN,R5
       INC  R5
       SLA  R5,1
       A    @LINLST,R5
*
       MOV  R5,R6
*
       CLR  R0
*
UNI1   MOV  *R5,R3
*
       MOVB *R3,R4
       SRL  R4,8
       A    R4,R0
*
       A    R3,R4
*
       CB   *R4,@CR
       JEQ  UNI2
       CB   *R4,@LF
       JEQ  UNI2
*
       INCT R5
       JMP  UNI1
*
UNI2   MOV  R0,@UNIEND
       BLWP @BUFALC
       CI   R0,>FFFF
       JNE  UNI2B
       B    @WRPERR
UNI2B  MOV  R0,@UNIADR
       A    R0,@UNIEND
*
       MOV  R0,R1
UNI3   MOV  *R6,R0
       MOVB *R0,R2
       INC  R0
       SRL  R2,8
       BLWP @BUFCPY
*
       A    R2,R1
*
       INCT R6
       C    R6,R5
       JLE  UNI3
*
       MOV  R5,@FINLIN
       RT
* Address of unified line.
UNIADR DATA 0
* Size
UNIEND DATA 0
* Last address within the line list that
* we can just copy over.
FINLIN DATA 0

*
* Find Break
*
FNDBRK MOV  @CPL,R2
       A    R10,R2
*
       C    R2,@UNIEND
       JHE  FND5
*
       CB   *R2,@SPACE
       JEQ  FND2
* Find last invisible character in early
* line
FND1   DEC  R2
       CB   *R2,@SPACE
       JEQ  FND3
       CB   *R2,@DASH
       JEQ  FND3
       JMP  FND1
* Find first visible character in next
* line
FND2   INC  R2
       CB   *R2,@SPACE
       JEQ  FND2
       JMP  FND4
FND3   INC  R2
* Save break address in R8
FND4   MOV  R2,R8
       RT
FND5   MOV  @UNIEND,R8
       RT
CPL    DATA 0

* 
* Either delete a line from buffer
* or insert a space in the line list
* 
DELLIN MOV  @WRPLN,R5
       INC  R5
       SLA  R5,1
       A    @LINLST,R5
*
       C    R5,@FINLIN
       JH   INSRT
* Delete
       MOV  *R5,R0
       BLWP @BUFREE
       RT
*
* Insert space for a line
*
INSRT  MOV  @LINLST,R4
* Get required byte-size of current line
* list plus one new element
       MOV  *R4,R2
       INCT R2
       SLA  R2,1
* Get space of line lists current memory
* chunk
       MOV  R4,R0
       DECT R0
       MOV  *R0,R0
       SZC  @BLKUSE,R0
       DECT R0
* Does line list's memory block have
* enough space?
       C    R2,R0
       JLE  INSRT2
* No, create another buffer roughly
* twice the size of the old one.
       SLA  R0,1
       BLWP @BUFALC
       CI   R0,>FFFF
       JEQ  WRPERR
* Copy line list
       MOV  *R4,R2
       INC  R2
       SLA  R2,1
       MOV  R0,R1
       MOV  R4,R0
       BLWP @BUFCPY
* Delete old line list
       BLWP @BUFREE
* Save address of new line list
       MOV  R1,@LINLST
       MOV  R1,R4
* Find new address of the address of the
* wrap line
       MOV  @WRPLN,R5
       INC  R5
       SLA  R5,1
       A    @LINLST,R5
* Insert a space in line list
INSRT2 
* Find end of the list
       MOV  *R4,R2
       SLA  R2,1
       A    R4,R2
       MOV  R2,R1
       INCT R1
* Copy contents one word later in memory
INSRT3 MOV  *R2,*R1
       DECT R2
       DECT R1
       C    R2,R5
       JHE  INSRT3
* Increase size of new line list by one
       INC  *R4
       RT
BLKUSE DATA >8000

*
* Make a line
*
MAKLIN MOV  R8,R2
       S    R10,R2
*
       MOV  R2,R0
       INC  R0
       BLWP @BUFALC
       CI   R0,>FFFF
       JEQ  WRPERR
*
       MOV  R2,R1
       SLA  R1,8
       MOVB R1,*R0+
*
       MOV  R0,R1
       MOV  R10,R0
       BLWP @BUFCPY
* Save the line in line list.
       DEC  R1
       MOV  R1,*R5
       RT

WRPERR MOV  R0,*R13
       RTWP

* 
* Remove extra lines when text wrapped
* up.
* 
RMXTRA MOV  @LINLST,R4
* Set R5 to the address in the line list
* pointing to the last line that was 
* wrapped into.
       MOV  @WRPLN,R5
       SLA  R5,1
       A    R4,R5
* If FINLIN, is at least one index after
* the last line wrapped into, then 
* remove FINLIN's entry from line list.
       MOV  @FINLIN,R2
       S    R5,R2
       JGT  XTRA1
       RT
* Copy parts of line list forward
XTRA1  INCT R5
       MOV  R5,R0
       INCT R0
       MOV  R5,R1
       BLWP @BUFCPY
* Decrease size of line list
       SRL  R2,1
       S    R2,*R4
       RT
       END