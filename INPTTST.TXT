       DEF  RUNTST
*
       REF  INPUT

       REF  LINLST,FMTLST,MGNLST
       REF  MAKETX,PRINTL,OPENF,CLOSEF
       REF  ARYALC,ARYADD,ARYINS,ARYDEL
       REF  ARYADR
       REF  BUFALC,BUFINT,BUFCPY

* variables just for INPUT
       REF  KEYSTB,KEYSTE,KEYSTX
       REF  PARINX,LININX,CHRPAX,CHRLIX
       REF  WINOFF
       REF  INSTMD

* constants
       REF  USRISR,SIX

*
INSKEY EQU  >04
DELKEY EQU  >03
FNCTN3 EQU  >07
FNCTN4 EQU  >02
FNCTN5 EQU  >0E
FNCTN6 EQU  >0C
FNCTN7 EQU  >01
FNCTN8 EQU  >06
FNCTN9 EQU  >0F
FNCTN0 EQU  >BC
*
BCKKEY EQU  >08
FWDKEY EQU  >09
UPPKEY EQU  >0B
DWNKEY EQU  >0A
*
ENTER  EQU  >0D

RUNTST BLWP @OPENF
* Write notification on screen.
       BL   @WRTST
* Run each test
       BL   @TSTINT
       BL   @TST1
       BL   @TSTINT
       BL   @TST2
       BL   @TSTINT
       BL   @TST3
       BL   @TSTINT
       BL   @TST4
       BL   @TSTINT
       BL   @TST5
       BL   @TSTINT
       BL   @TST6
       BL   @TSTINT
       BL   @TST7
* Backspace tests
       BL   @TSTINT
       BL   @TST8
       BL   @TSTINT
       BL   @TST9
* Forward space tests
       BL   @TSTINT
       BL   @TST10
       BL   @TSTINT
       BL   @TST11
* Enter-key tests
       BL   @TSTINT
       BL   @TST12
       BL   @TSTINT
       BL   @TST13
       BL   @TSTINT
       BL   @TST14
* Write notification on screen.
       BL   @WREND
       BLWP @CLOSEF
JMP    LIMI 2
       LIMI 0
       JMP  JMP

* Write notification
WRTST  LI   R0,STARTM
       LI   R1,ENDM-STARTM
       BLWP @PRINTL
       RT
 
* Finished testing
WREND  LI   R0,ENDM
       LI   R1,4
       BLWP @PRINTL
       RT

STARTM TEXT 'Testing'
ENDM   TEXT 'Done'
ENDME  EVEN

****************************************
*
* Initialization for individual test.
*
****************************************

TSTINT
* Initialize buffer.
       LI   R0,SPACE
       LI   R1,>2000
       BLWP @BUFINT
* Reserve space for margin and format
* and paragraph list.
       LI   R0,3
       BLWP @ARYALC
       MOV  R0,@FMTLST
       LI   R0,3
       BLWP @ARYALC
       MOV  R0,@MGNLST
       LI   R0,1
       BLWP @ARYALC
       MOV  R0,@LINLST
*
       LI   R10,INTADR
* Copy a paragraph into buffer
TSTIN1
       MOV  *R10+,R0
       MOV  R0,R2
       BLWP @BUFALC
       MOV  R0,R1
       MOV  *R10+,R0
       BLWP @BUFCPY
       MOV  R1,R4
* and a wrap list
       MOV  *R10+,R0
       MOV  R0,R2
       BLWP @BUFALC
       MOV  R0,R1
       MOV  *R10+,R0
       BLWP @BUFCPY
       MOV  R1,R5
* Put the paragraph into the
* paragraph list
       MOV  @LINLST,R0
       BLWP @ARYADD
       MOV  R0,@LINLST
       MOV  R4,*R1
* Put the wrap list in the paragraph
* header
       INCT R4
       MOV  R5,*R4
* Loop
       CI   R10,INTADE
       JL   TSTIN1
       RT

* paragraph size, paragraph address,
* wrap list size, wrap list address
INTADR DATA PAR0A-PAR0,PAR0,PAR0-WRAP0,WRAP0
       DATA PAR1A-PAR1,PAR1,PAR1-WRAP1,WRAP1
       DATA PAR2A-PAR2,PAR2,PAR2-WRAP2,WRAP2
       DATA PAR3A-PAR3,PAR3,PAR3-WRAP3,WRAP3
INTADE

****************************************
*
* Starting Data
*
****************************************

*Number of tests to run
TSTCNT DATA 0

PARL0  DATA 3,1
       DATA PAR0
       DATA PAR1
       DATA PAR2

WRAP0  DATA 0,1
PAR0   DATA PAR0A-PAR0-4,WRAP0
       TEXT 'History'
PAR0A
       EVEN
WRAP1  DATA 0,1
PAR1   DATA PAR1A-PAR1-4,WRAP1
       TEXT 'Antiquity'
PAR1A
       EVEN
WRAP2  DATA 0,1
PAR2   DATA PAR2A-PAR2-4,WRAP2
       TEXT 'With a history, Wuhan is one of the most '
       TEXT 'ancient and civilized '
       TEXT 'metropolitan cities in China. Panlongcheng '
       TEXT 'is located in '
       TEXT 'modern-day Huangpi District. During the '
       TEXT 'Western Zhou, the E '
       TEXT 'state controlled the present-day '
       TEXT 'Wuchang area south of the Yangtze River. '
       TEXT 'After the conquest of the E state, the '
       TEXT 'present-day Wuhan area was controlled by the '
       TEXT 'Chu state for the rest of the Western Zhou '
       TEXT 'and Eastern Zhou periods.'
PAR2A
       EVEN
*3,500-year-long 
*, an archaeological site associated with the Erligang culture,
WRAP3  DATA 0,1
PAR3   DATA PAR3A-PAR3-4,WRAP3
       TEXT 'During the Han dynasty, Hanyang became a '
       TEXT 'fairly busy port. '
       TEXT 'The Battle of Xiakou in AD 203 and Battle '
       TEXT 'of Jiangxia five '
       TEXT 'years later were fought over control of '
       TEXT 'Jiangxia Commandery '
       TEXT '(present-day Xinzhou District in northeast '
       TEXT 'Wuhan). In the '
       TEXT 'winter of 208/9, one of the most famous '
       TEXT 'battles in Chinese '
       TEXT 'history and a central event in the Romance '
       TEXT 'of the Three '
       TEXT 'Kingdoms the Battle of Red Cliffs took '
       TEXT 'place in the vicinity '
       TEXT 'of the cliffs near Wuhan. Around that '
       TEXT 'time, walls were built '
       TEXT 'to protect Hanyang (AD 206) and '
       TEXT 'Wuchang (AD 223). The latter '
       TEXT 'event marks the foundation of Wuhan. '
       TEXT 'In AD 223, the Yellow '
       TEXT 'Crane Tower, one of the Four Great '
       TEXT 'Towers of China, was '
       TEXT 'constructed on the Wuchang side of the '
       TEXT 'Yangtze River by '
       TEXT 'order of Sun Quan, leader of the Eastern Wu. '
       TEXT 'The tower '
       TEXT 'become a sacred site of Taoism.'
PAR3A
       EVEN

LKYSTB TEXT 'KEYSTB'
LKYSTE TEXT 'KEYSTB'
LKYSTX TEXT 'KEYSTX'
LPRINX TEXT 'PARINX'
LLNINX TEXT 'LININX'
LCRPAX TEXT 'CHRPAX'
LCRLIX TEXT 'CHRLIX'
LWNOFF TEXT 'WINOFF'
LISTMD TEXT 'INSTMD'

****************************************
*
* Each Test
*
****************************************

* Test 1
* ------
* User inserted some text and overwrotesuch
* some other text such that
* "With a history, Wuhan"
* became
* "With a 3,500-year-long HISTORY, Wuhan"
TST1   MOV  R11,R12
* Set position values
       CLR  @INSTMD
       LI   R0,2
       MOV  R0,@PARINX
       CLR  @LININX
       LI   R0,7
       MOV  R0,@CHRPAX
       MOV  R0,@CHRLIX
       CLR  @WINOFF
* Allocate space for key stream
       BL   @FSTKS
* Set up interupt routine.
       LI   R0,KEYINT
       MOV  R0,@USRISR
       LI   R0,KEYL1
       MOV  R0,@KEYSRC
       LI   R0,KEYL1E
       MOV  R0,@KEYEND
* Run routine
       BLWP @INPUT
* Get address of paragraph now
       MOV  @LINLST,R0
       LI   R1,2
       BLWP @ARYADR
       MOV  *R1,R1
* Test paragraph contents
       AI   R1,4
       LI   R2,EXP1A+4
       LI   R0,EXP1B
       LI   R3,1
       BL   @STRCMP
* Test position values.
* Only CHRPAX and CHRLIX should have
* changed due to cursor moving.
       MOV  @PARINX,R0
       LI   R1,2
       LI   R2,LPRINX
       BL   @COMPVL
*
       MOV  @LININX,R0
       CLR  R1
       LI   R2,LLNINX
       BL   @COMPVL
*
       MOV  @CHRPAX,R0
       LI   R1,7+23
       LI   R2,LCRPAX
       BL   @COMPVL
*
       MOV  @CHRLIX,R0
       LI   R1,7+23
       LI   R2,LCRLIX
       BL   @COMPVL
*
       MOV  @WINOFF,R0
       CLR  R1
       LI   R2,LWNOFF
       BL   @COMPVL
*
       BL   @PSUCCS
*
       B    *R12


* Pretend that "_" means there was no
* input from the keyboard.
KEYL1  TEXT '________'
       TEXT '________'
       TEXT '3_______'
       TEXT ',_______'
       TEXT '________'
       TEXT '________'
       TEXT '________'
       TEXT '500-ye__'
       TEXT '________'
       TEXT 'ar-lo___'
       TEXT 'n_______'
       TEXT '________'
       TEXT 'g ______'
       TEXT '________'
       TEXT '________'
       BYTE INSKEY
       TEXT '_______'
       TEXT 'H_______'
       TEXT 'I_______'
       TEXT 'S_______'
       TEXT 'T_______'
       TEXT 'O_______'
       TEXT 'R_______'
       TEXT 'Y_______'
       TEXT '________'
       BYTE >FE
       BSS  7
KEYL1E

EXP1A DATA 0,0
      TEXT 'With a 3,500-year-long HISTORY, Wuhan is '
      TEXT 'one of '
      TEXT 'the most '
      TEXT 'ancient and civilized metropolitan cities '
      TEXT 'in China. Panlongcheng is located in '
      TEXT 'modern-day '
      TEXT 'Huangpi District. During the Western Zhou, '
      TEXT 'the E state controlled the present-day '
      TEXT 'Wuchang area south of the Yangtze River. '
      TEXT 'After the conquest of the E state, the '
      TEXT 'present-day Wuhan area was controlled by the '
      TEXT 'Chu state for the rest of the Western Zhou '
      TEXT 'and Eastern Zhou periods.'
EXP1B
      EVEN


* Test 2
* ------
* User inserted enough new text such
* that the cursor should move right to
* the second horizontal window.
* Type in the second line of paragraph.
* Start at character index 37.
* Stop at character index 45.
TST2   MOV  R11,R12
* Set position values
       CLR  @INSTMD
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,1
       MOV  R0,@LININX
       LI   R0,100
       MOV  R0,@CHRPAX
       LI   R0,37
       MOV  R0,@CHRLIX
       CLR  @WINOFF
* Allocate space for key stream
       BL   @FSTKS
* Set up interupt routine.
       LI   R0,KEYINT
       MOV  R0,@USRISR
       LI   R0,KEYL2
       MOV  R0,@KEYSRC
       LI   R0,KEYL2E
       MOV  R0,@KEYEND
* Run routine
       BLWP @INPUT
* Get address of paragraph now
       MOV  @LINLST,R0
       LI   R1,2
       BLWP @ARYADR
       MOV  *R1,R1
* Test paragraph contents
       AI   R1,4
       LI   R2,EXP2A+4
       LI   R0,EXP2B
       LI   R3,2
       BL   @STRCMP
* Test position values.
* CHRPAX, CHRLIX, and WINOFF should have
* increasd.
       MOV  @PARINX,R0
       LI   R1,2
       LI   R2,LPRINX
       BL   @COMPVL
*
       MOV  @LININX,R0
       LI   R1,1
       LI   R2,LLNINX
       BL   @COMPVL
*
       MOV  @CHRPAX,R0
       LI   R1,108
       LI   R2,LCRPAX
       BL   @COMPVL
*
       MOV  @CHRLIX,R0
       LI   R1,55
       LI   R2,LCRLIX
       BL   @COMPVL
*
       MOV  @WINOFF,R0
       LI   R1,20
       LI   R2,LWNOFF
       BL   @COMPVL
*
       BL   @PSUCCS
*
       B    *R12


* Pretend that "_" means there was no
* input from the keyboard.
KEYL2  TEXT '________'
       TEXT ' _______'
       TEXT '________'
       TEXT 'a_______'
       TEXT 'b_______'
       TEXT '________'
       TEXT '________'
       TEXT 'c_______'
       TEXT 'd_______'
       TEXT '________'
       TEXT 'e_______'
       TEXT 'f_______'
       TEXT '________'
       TEXT ' _______'
       TEXT '________'
       BYTE >FE
       BSS  7
KEYL2E

EXP2A  DATA 0,0
       TEXT 'With a history, Wuhan is one of the most '
       TEXT 'ancient and civilized '
       TEXT 'metropolitan cities in China. Panlong '
       TEXT 'abcdef cheng '
       TEXT 'is located in '
       TEXT 'modern-day Huangpi District. During the '
       TEXT 'Western Zhou, the E '
       TEXT 'state controlled the present-day '
       TEXT 'Wuchang area south of the Yangtze River. '
       TEXT 'After the conquest of the E state, the '
       TEXT 'present-day Wuhan area was controlled by the '
       TEXT 'Chu state for the rest of the Western Zhou '
       TEXT 'and Eastern Zhou periods.'
EXP2B 
       EVEN

* Test 3
* ------
* User inserted enough new text such
* that the cursor should move right to
* the second horizontal window, but
* this time the cursor should stop at
* the left-most column of new window.
* Type in the second line of paragraph.
* Start at character index 37.
* Stop at character index 40.
TST3   MOV  R11,R12
* Set position values
       CLR  @INSTMD
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,1
       MOV  R0,@LININX
       LI   R0,100
       MOV  R0,@CHRPAX
       LI   R0,37
       MOV  R0,@CHRLIX
       CLR  @WINOFF
* Allocate space for key stream
       BL   @FSTKS
* Set up interupt routine.
       LI   R0,KEYINT
       MOV  R0,@USRISR
       LI   R0,KEYL3
       MOV  R0,@KEYSRC
       LI   R0,KEYL3E
       MOV  R0,@KEYEND
* Run routine
       BLWP @INPUT
* Get address of paragraph now
       MOV  @LINLST,R0
       LI   R1,2
       BLWP @ARYADR
       MOV  *R1,R1
* Test paragraph contents
       AI   R1,4
       LI   R2,EXP3A+4
       LI   R0,EXP3B
       LI   R3,3
       BL   @STRCMP
* Test position values.
* CHRPAX, CHRLIX, and WINOFF should have
* increasd.
       MOV  @PARINX,R0
       LI   R1,2
       LI   R2,LPRINX
       BL   @COMPVL
*
       MOV  @LININX,R0
       LI   R1,1
       LI   R2,LLNINX
       BL   @COMPVL
*
       MOV  @CHRPAX,R0
       LI   R1,103
       LI   R2,LCRPAX
       BL   @COMPVL
*
       MOV  @CHRLIX,R0
       LI   R1,50
       LI   R2,LCRLIX
       BL   @COMPVL
*
       MOV  @WINOFF,R0
       LI   R1,20
       LI   R2,LWNOFF
       BL   @COMPVL
*
       BL   @PSUCCS
*
       B    *R12


* Pretend that "_" means there was no
* input from the keyboard.
KEYL3  TEXT '________'
       TEXT ' _______'
       TEXT '________'
       TEXT '@_______'
       TEXT ' _______'
       TEXT '________'
       TEXT '________'
       BYTE >FE
       BSS  7
KEYL3E

EXP3A  DATA 0,0
       TEXT 'With a history, Wuhan is one of the most '
       TEXT 'ancient and civilized '
       TEXT 'metropolitan cities in China. Panlong '
       TEXT '@ cheng '
       TEXT 'is located in '
       TEXT 'modern-day Huangpi District. During the '
       TEXT 'Western Zhou, the E '
       TEXT 'state controlled the present-day '
       TEXT 'Wuchang area south of the Yangtze River. '
       TEXT 'After the conquest of the E state, the '
       TEXT 'present-day Wuhan area was controlled by the '
       TEXT 'Chu state for the rest of the Western Zhou '
       TEXT 'and Eastern Zhou periods.'
EXP3B
       EVEN


* Test 4
* ------
* User inserted some text that would have taken
* the user down to the next line.
TST4   MOV  R11,R12
* Set position values
       CLR  @INSTMD
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,1
       MOV  R0,@LININX
       LI   R0,109
       MOV  R0,@CHRPAX
       LI   R0,56
       MOV  R0,@CHRLIX
       LI   R0,20
       MOV  R0,@WINOFF
* Allocate space for key stream
       BL   @FSTKS
* Set up interupt routine.
       LI   R0,KEYINT
       MOV  R0,@USRISR
       LI   R0,KEYL4
       MOV  R0,@KEYSRC
       LI   R0,KEYL4E
       MOV  R0,@KEYEND
* Run routine
       BLWP @INPUT
* Get address of paragraph now
       MOV  @LINLST,R0
       LI   R1,2
       BLWP @ARYADR
       MOV  *R1,R1
* Test paragraph contents
       AI   R1,4
       LI   R2,EXP4A+4
       LI   R0,EXP4B
       LI   R3,4
       BL   @STRCMP
* Test position values.
* CHRPAX, CHRLIX, and WINOFF should have
* increasd.
       MOV  @PARINX,R0
       LI   R1,2
       LI   R2,LPRINX
       BL   @COMPVL
*
       MOV  @LININX,R0
       LI   R1,2
       LI   R2,LLNINX
       BL   @COMPVL
*
       MOV  @CHRPAX,R0
       LI   R1,121
       LI   R2,LCRPAX
       BL   @COMPVL
*
       MOV  @CHRLIX,R0
       LI   R1,12
       LI   R2,LCRLIX
       BL   @COMPVL
*
       MOV  @WINOFF,R0
       LI   R1,0
       LI   R2,LWNOFF
       BL   @COMPVL
*
       BL   @PSUCCS
*
       B    *R12


* Pretend that "_" means there was no
* input from the keyboard.
KEYL4  TEXT '________'
       TEXT 'essen___'
       TEXT '________'
       TEXT 'tially _'
       TEXT '________'
       TEXT '________'
       BYTE >FE
       BSS  7
KEYL4E

EXP4A  DATA 0,0
       TEXT 'With a history, Wuhan is one of the most '
       TEXT 'ancient and civilized '
       TEXT 'metropolitan cities in China. Panlongcheng '
       TEXT 'is essentially located in '
       TEXT 'modern-day Huangpi District. During the '
       TEXT 'Western Zhou, the E '
       TEXT 'state controlled the present-day '
       TEXT 'Wuchang area south of the Yangtze River. '
       TEXT 'After the conquest of the E state, the '
       TEXT 'present-day Wuhan area was controlled by the '
       TEXT 'Chu state for the rest of the Western Zhou '
       TEXT 'and Eastern Zhou periods.'
EXP4B
       EVEN

* Test 5
* ------
* User inserted some text at the end of
* the paragraph.
TST5   MOV  R11,R12
* Set test number.
       LI   R3,5
* Set position values
       CLR  @INSTMD
TST5A  LI   R0,2
       MOV  R0,@PARINX
       LI   R0,7
       MOV  R0,@LININX
       LI   R0,406
       MOV  R0,@CHRPAX
       LI   R0,8
       MOV  R0,@CHRLIX
       LI   R0,0
       MOV  R0,@WINOFF
* Allocate space for key stream
       BL   @FSTKS
* Set up interupt routine.
       LI   R0,KEYINT
       MOV  R0,@USRISR
       LI   R0,KEYL5
       MOV  R0,@KEYSRC
       LI   R0,KEYL5E
       MOV  R0,@KEYEND
* Run routine
       BLWP @INPUT
* Get address of paragraph now
       MOV  @LINLST,R0
       LI   R1,2
       BLWP @ARYADR
       MOV  *R1,R1
* Test paragraph contents
       AI   R1,4
       LI   R2,EXP5A+4
       LI   R0,EXP5B
       BL   @STRCMP
* Test position values.
* CHRPAX, CHRLIX, and WINOFF should have
* increasd.
       MOV  @PARINX,R0
       LI   R1,2
       LI   R2,LPRINX
       BL   @COMPVL
*
       MOV  @LININX,R0
       LI   R1,7
       LI   R2,LLNINX
       BL   @COMPVL
*
       MOV  @CHRPAX,R0
       LI   R1,421
       LI   R2,LCRPAX
       BL   @COMPVL
*
       MOV  @CHRLIX,R0
       LI   R1,23
       LI   R2,LCRLIX
       BL   @COMPVL
*
       MOV  @WINOFF,R0
       LI   R1,0
       LI   R2,LWNOFF
       BL   @COMPVL
*
       BL   @PSUCCS
*
       B    *R12


* Pretend that "_" means there was no
* input from the keyboard.
KEYL5  TEXT ' _______'
       TEXT 'During__'
       TEXT '________'
       TEXT ' _______'
       TEXT '________'
       TEXT '________'
       TEXT 'the_____'
       TEXT ' _______'
       TEXT 'H_______'
       TEXT '________'
       TEXT 'a_______'
       TEXT '________'
       TEXT 'n_______'
       BYTE >FE
       BSS  7
KEYL5E

EXP5A  DATA 0,0
       TEXT 'With a history, Wuhan is one of the most '
       TEXT 'ancient and civilized '
       TEXT 'metropolitan cities in China. Panlongcheng '
       TEXT 'is located in '
       TEXT 'modern-day Huangpi District. During the '
       TEXT 'Western Zhou, the E '
       TEXT 'state controlled the present-day '
       TEXT 'Wuchang area south of the Yangtze River. '
       TEXT 'After the conquest of the E state, the '
       TEXT 'present-day Wuhan area was controlled by the '
       TEXT 'Chu state for the rest of the Western Zhou '
       TEXT 'and Eastern Zhou periods. During the Han'
EXP5B
       EVEN

* Test 6
* ------
* User inserted added text at the end of
* the paragraph in overwrite mode.
TST6   MOV  R11,R12
       SETO @INSTMD
* Set test number.
       LI   R3,6
*
       B    @TST5A

* Test 7
* ------
* Insert a character that the system
* doesn't recognize. Output should not
* be affected.
TST7   MOV  R11,R12
* Set test number.
       LI   R3,7
* Set position values
       CLR  @INSTMD
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,0
       MOV  R0,@LININX
       LI   R0,2
       MOV  R0,@CHRPAX
       LI   R0,2
       MOV  R0,@CHRLIX
       LI   R0,0
       MOV  R0,@WINOFF
* Allocate space for key stream
       BL   @FSTKS
* Set up interupt routine.
       LI   R0,KEYINT
       MOV  R0,@USRISR
       LI   R0,KEYL7
       MOV  R0,@KEYSRC
       LI   R0,KEYL7E
       MOV  R0,@KEYEND
* Run routine
       BLWP @INPUT
* Get address of paragraph now
       MOV  @LINLST,R0
       LI   R1,2
       BLWP @ARYADR
       MOV  *R1,R1
* Test paragraph contents
       AI   R1,4
       LI   R2,PAR2+4
       LI   R0,PAR2A
       BL   @STRCMP
* Test position values.
* CHRPAX, CHRLIX, and WINOFF should have
* increasd.
       MOV  @PARINX,R0
       LI   R1,2
       LI   R2,LPRINX
       BL   @COMPVL
*
       MOV  @LININX,R0
       LI   R1,0
       LI   R2,LLNINX
       BL   @COMPVL
*
       MOV  @CHRPAX,R0
       LI   R1,2
       LI   R2,LCRPAX
       BL   @COMPVL
*
       MOV  @CHRLIX,R0
       LI   R1,2
       LI   R2,LCRLIX
       BL   @COMPVL
*
       MOV  @WINOFF,R0
       LI   R1,0
       LI   R2,LWNOFF
       BL   @COMPVL
*
       BL   @PSUCCS
*
       B    *R12


* Pretend that "_" means there was no
* input from the keyboard.
KEYL7  TEXT '________'
       BYTE >F0
       TEXT '_______'
       TEXT '________'
       TEXT '________'
       BYTE >FE
       BSS  7
KEYL7E

* Test 8
* ------
* User pressed the backspace from middle
* of paragraph.
TST8   MOV  R11,R12
* Set test number.
       LI   R3,8
* Set position values
       CLR  @INSTMD
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,2
       MOV  R0,@LININX
       LI   R0,129
       MOV  R0,@CHRPAX
       LI   R0,20
       MOV  R0,@CHRLIX
       LI   R0,20
       MOV  R0,@WINOFF
* Allocate space for key stream
       BL   @FSTKS
* Set up interupt routine.
       LI   R0,KEYINT
       MOV  R0,@USRISR
       LI   R0,KEYL8
       MOV  R0,@KEYSRC
       LI   R0,KEYL8E
       MOV  R0,@KEYEND
* Run routine
       BLWP @INPUT
* Get address of paragraph now
       MOV  @LINLST,R0
       LI   R1,2
       BLWP @ARYADR
       MOV  *R1,R1
* Test paragraph contents
       AI   R1,4
       LI   R2,PAR2+4
       LI   R0,PAR2A
       BL   @STRCMP
* Test position values.
* CHRPAX, CHRLIX, and WINOFF should have
* increasd.
       MOV  @PARINX,R0
       LI   R1,2
       LI   R2,LPRINX
       BL   @COMPVL
*
       MOV  @LININX,R0
       LI   R1,2
       LI   R2,LLNINX
       BL   @COMPVL
*
       MOV  @CHRPAX,R0
       LI   R1,128
       LI   R2,LCRPAX
       BL   @COMPVL
*
       MOV  @CHRLIX,R0
       LI   R1,19
       LI   R2,LCRLIX
       BL   @COMPVL
*
       MOV  @WINOFF,R0
       LI   R1,0
       LI   R2,LWNOFF
       BL   @COMPVL
*
       BL   @PSUCCS
*
       B    *R12


* Pretend that "_" means there was no
* input from the keyboard.
KEYL8  TEXT '________'
       TEXT '________'
       BYTE BCKKEY
       TEXT '_______'
       TEXT '________'
       TEXT '________'
       BYTE >FE
       BSS  7
KEYL8E

* Test 9
* ------
* User pressed the backspace from the
* beginning of the paragraph.
TST9   MOV  R11,R12
* Set test number.
       LI   R3,9
* Set position values
       CLR  @INSTMD
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,0
       MOV  R0,@LININX
       LI   R0,0
       MOV  R0,@CHRPAX
       LI   R0,0
       MOV  R0,@CHRLIX
       LI   R0,0
       MOV  R0,@WINOFF
* Allocate space for key stream
       BL   @FSTKS
* Set up interupt routine.
       LI   R0,KEYINT
       MOV  R0,@USRISR
       LI   R0,KEYL8
       MOV  R0,@KEYSRC
       LI   R0,KEYL8E
       MOV  R0,@KEYEND
* Run routine
       BLWP @INPUT
* Get address of paragraph now
       MOV  @LINLST,R0
       LI   R1,2
       BLWP @ARYADR
       MOV  *R1,R1
* Test paragraph contents
       AI   R1,4
       LI   R2,PAR2+4
       LI   R0,PAR2A
       BL   @STRCMP
* Test position values.
* CHRPAX, CHRLIX, and WINOFF should have
* increasd.
       MOV  @PARINX,R0
       LI   R1,1
       LI   R2,LPRINX
       BL   @COMPVL
*
       MOV  @LININX,R0
       LI   R1,0
       LI   R2,LLNINX
       BL   @COMPVL
*
       MOV  @CHRPAX,R0
       LI   R1,9
       LI   R2,LCRPAX
       BL   @COMPVL
*
       MOV  @CHRLIX,R0
       LI   R1,9
       LI   R2,LCRLIX
       BL   @COMPVL
*
       MOV  @WINOFF,R0
       LI   R1,0
       LI   R2,LWNOFF
       BL   @COMPVL
*
       BL   @PSUCCS
*
       B    *R12

* Test 10
* -------
* User pressed the forward space onto
* another line in the middle of the
* paragraph.
TST10  MOV  R11,R12
* Set test number.
       LI   R3,10
* Set position values
       CLR  @INSTMD
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,2
       MOV  R0,@LININX
       LI   R0,167
       MOV  R0,@CHRPAX
       LI   R0,58
       MOV  R0,@CHRLIX
       LI   R0,20
       MOV  R0,@WINOFF
* Allocate space for key stream
       BL   @FSTKS
* Set up interupt routine.
       LI   R0,KEYINT
       MOV  R0,@USRISR
       LI   R0,KEYL10
       MOV  R0,@KEYSRC
       LI   R0,KEY10E
       MOV  R0,@KEYEND
* Run routine
       BLWP @INPUT
* Get address of paragraph now
       MOV  @LINLST,R0
       LI   R1,2
       BLWP @ARYADR
       MOV  *R1,R1
* Test paragraph contents
       AI   R1,4
       LI   R2,PAR2+4
       LI   R0,PAR2A
       BL   @STRCMP
* Test position values.
* CHRPAX, CHRLIX, and WINOFF should have
* increasd.
       MOV  @PARINX,R0
       LI   R1,2
       LI   R2,LPRINX
       BL   @COMPVL
*
       MOV  @LININX,R0
       LI   R1,3
       LI   R2,LLNINX
       BL   @COMPVL
*
       MOV  @CHRPAX,R0
       LI   R1,168
       LI   R2,LCRPAX
       BL   @COMPVL
*
       MOV  @CHRLIX,R0
       LI   R1,0
       LI   R2,LCRLIX
       BL   @COMPVL
*
       MOV  @WINOFF,R0
       LI   R1,0
       LI   R2,LWNOFF
       BL   @COMPVL
*
       BL   @PSUCCS
*
       B    *R12

* Pretend that "_" means there was no
* input from the keyboard.
KEYL10 BYTE FWDKEY
       TEXT '_______'
       TEXT '________'
       TEXT '________'
       BYTE >FE
       BSS  7
KEY10E

* Test 11
* -------
* User pressed the forward space onto
* another paragraph.
TST11  MOV  R11,R12
* Set test number.
       LI   R3,11
* Set position values
       CLR  @INSTMD
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,8
       MOV  R0,@LININX
       LI   R0,406
       MOV  R0,@CHRPAX
       LI   R0,8
       MOV  R0,@CHRLIX
       LI   R0,0
       MOV  R0,@WINOFF
* Allocate space for key stream
       BL   @FSTKS
* Set up interupt routine.
       LI   R0,KEYINT
       MOV  R0,@USRISR
       LI   R0,KEYL10
       MOV  R0,@KEYSRC
       LI   R0,KEY10E
       MOV  R0,@KEYEND
* Run routine
       BLWP @INPUT
* Get address of paragraph now
       MOV  @LINLST,R0
       LI   R1,2
       BLWP @ARYADR
       MOV  *R1,R1
* Test paragraph contents
       AI   R1,4
       LI   R2,PAR2+4
       LI   R0,PAR2A
       BL   @STRCMP
* Test position values.
* CHRPAX, CHRLIX, and WINOFF should have
* increasd.
       MOV  @PARINX,R0
       LI   R1,3
       LI   R2,LPRINX
       BL   @COMPVL
*
       MOV  @LININX,R0
       LI   R1,0
       LI   R2,LLNINX
       BL   @COMPVL
*
       MOV  @CHRPAX,R0
       LI   R1,0
       LI   R2,LCRPAX
       BL   @COMPVL
*
       MOV  @CHRLIX,R0
       LI   R1,0
       LI   R2,LCRLIX
       BL   @COMPVL
*
       MOV  @WINOFF,R0
       LI   R1,0
       LI   R2,LWNOFF
       BL   @COMPVL
*
       BL   @PSUCCS
*
       B    *R12

* Test 12
* -------
* User presses enter from the beginning
* of a paragraph.
TST12  MOV  R11,R12
* Set test number.
       LI   R3,12
* Set position values
       CLR  @INSTMD
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,0
       MOV  R0,@LININX
       LI   R0,0
       MOV  R0,@CHRPAX
       LI   R0,0
       MOV  R0,@CHRLIX
       LI   R0,0
       MOV  R0,@WINOFF
* Allocate space for key stream
       BL   @FSTKS
* Set up interupt routine.
       LI   R0,KEYINT
       MOV  R0,@USRISR
       LI   R0,KEYL12
       MOV  R0,@KEYSRC
       LI   R0,KEY12E
       MOV  R0,@KEYEND
* Run routine
       BLWP @INPUT
* Get address of old paragraph
       MOV  @LINLST,R0
       LI   R1,2
       BLWP @ARYADR
       MOV  *R1,R1
* Paragraph should be empty
       MOV  *R1,R1
       JNE  ERR12
* Get address of new paragraph
       MOV  @LINLST,R0
       LI   R1,3
       BLWP @ARYADR
       MOV  *R1,R1
* The new paragraph should be the same
* as the original one
       AI   R1,4
       LI   R2,PAR2+4
       LI   R0,PAR2A
       BL   @STRCMP
* Test position values.
* CHRPAX, CHRLIX, and WINOFF should have
* increasd.
       MOV  @PARINX,R0
       LI   R1,3
       LI   R2,LPRINX
       BL   @COMPVL
*
       MOV  @LININX,R0
       LI   R1,0
       LI   R2,LLNINX
       BL   @COMPVL
*
       MOV  @CHRPAX,R0
       LI   R1,0
       LI   R2,LCRPAX
       BL   @COMPVL
*
       MOV  @CHRLIX,R0
       LI   R1,0
       LI   R2,LCRLIX
       BL   @COMPVL
*
       MOV  @WINOFF,R0
       LI   R1,0
       LI   R2,LWNOFF
       BL   @COMPVL
*
       BL   @PSUCCS
*
       B    *R12


* Pretend that "_" means there was no
* input from the keyboard.
KEYL12 TEXT '________'
       BYTE ENTER
       TEXT '_______'
       BYTE >FE
       BSS  7
KEY12E

ERR12  MOV  R1,R0
       LI   R1,ERR12N
       BLWP @MAKETX
*
       LI   R0,ERR12M
       LI   R1,ERR12O-ERR12M
       BLWP @PRINTL
*
       B    *R12
ERR12M TEXT 'Test 000C failed. '
       TEXT 'The old paragraph is not empty: '
ERR12N TEXT '....'
ERR12O
       EVEN

* Test 13
* -------
* User presses enter from the middle
* of a paragraph.
TST13  MOV  R11,R12
* Set position values
       CLR  @INSTMD
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,149
       MOV  R0,@CHRPAX
       LI   R0,2
       MOV  R0,@LININX
       LI   R0,40
       MOV  R0,@CHRLIX
       LI   R0,0
       MOV  R0,@WINOFF
* Allocate space for key stream
       BL   @FSTKS
* Set up interupt routine.
       LI   R0,KEYINT
       MOV  R0,@USRISR
       LI   R0,KEYL12
       MOV  R0,@KEYSRC
       LI   R0,KEY12E
       MOV  R0,@KEYEND
* Run routine
       BLWP @INPUT
* Get address of earlier paragraph
       MOV  @LINLST,R0
       LI   R1,2
       BLWP @ARYADR
       MOV  *R1,R1
* Set test number.
       LI   R3,>1000+13
* Test earlier paragraph
       AI   R1,4
       LI   R2,EXP13A
       LI   R0,EXP13B
       BL   @STRCMP
* Get address of later paragraph
       MOV  @LINLST,R0
       LI   R1,3
       BLWP @ARYADR
       MOV  *R1,R1
* Set test number.
       LI   R3,13
* Test later paragraph
       AI   R1,4
       LI   R2,EXP13C
       LI   R0,EXP13D
       BL   @STRCMP
* Test position values.
* CHRPAX, CHRLIX, and WINOFF should have
* increasd.
       MOV  @PARINX,R0
       LI   R1,3
       LI   R2,LPRINX
       BL   @COMPVL
*
       MOV  @CHRPAX,R0
       LI   R1,0
       LI   R2,LCRPAX
       BL   @COMPVL
*
       MOV  @LININX,R0
       LI   R1,0
       LI   R2,LLNINX
       BL   @COMPVL
*
       MOV  @CHRLIX,R0
       LI   R1,0
       LI   R2,LCRLIX
       BL   @COMPVL
*
       MOV  @WINOFF,R0
       LI   R1,0
       LI   R2,LWNOFF
       BL   @COMPVL
*
       BL   @PSUCCS
*
       B    *R12

EXP13A TEXT 'With a history, Wuhan is one of the most '
       TEXT 'ancient and civilized '
       TEXT 'metropolitan cities in China. Panlongcheng '
       TEXT 'is located in '
       TEXT 'modern-day Huangpi District. '
EXP13B
       EVEN
EXP13C TEXT 'During the '
       TEXT 'Western Zhou, the E '
       TEXT 'state controlled the present-day '
       TEXT 'Wuchang area south of the Yangtze River. '
       TEXT 'After the conquest of the E state, the '
       TEXT 'present-day Wuhan area was controlled by the '
       TEXT 'Chu state for the rest of the Western Zhou '
       TEXT 'and Eastern Zhou periods.'
EXP13D
       EVEN

* Test 14
* -------
* User presses enter from the beginning
* of a paragraph.
TST14  MOV  R11,R12
* Set test number.
       LI   R3,14
* Set position values
       CLR  @INSTMD
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,406
       MOV  R0,@CHRPAX
       LI   R0,8
       MOV  R0,@LININX
       LI   R0,8
       MOV  R0,@CHRLIX
       LI   R0,0
       MOV  R0,@WINOFF
* Allocate space for key stream
       BL   @FSTKS
* Set up interupt routine.
       LI   R0,KEYINT
       MOV  R0,@USRISR
       LI   R0,KEYL12
       MOV  R0,@KEYSRC
       LI   R0,KEY12E
       MOV  R0,@KEYEND
* Run routine
       BLWP @INPUT
* Get address of new paragraph
       MOV  @LINLST,R0
       LI   R1,3
       BLWP @ARYADR
       MOV  *R1,R1
* Paragraph should be empty
       MOV  *R1,R1
       JNE  ERR14
* Get address of old paragraph
       MOV  @LINLST,R0
       LI   R1,2
       BLWP @ARYADR
       MOV  *R1,R1
* The new paragraph should be the same
* as the original one
       AI   R1,4
       LI   R2,PAR2+4
       LI   R0,PAR2A
       BL   @STRCMP
* Test position values.
* CHRPAX, CHRLIX, and WINOFF should have
* increasd.
       MOV  @PARINX,R0
       LI   R1,3
       LI   R2,LPRINX
       BL   @COMPVL
*
       MOV  @LININX,R0
       LI   R1,0
       LI   R2,LLNINX
       BL   @COMPVL
*
       MOV  @CHRPAX,R0
       LI   R1,0
       LI   R2,LCRPAX
       BL   @COMPVL
*
       MOV  @CHRLIX,R0
       LI   R1,0
       LI   R2,LCRLIX
       BL   @COMPVL
*
       MOV  @WINOFF,R0
       LI   R1,0
       LI   R2,LWNOFF
       BL   @COMPVL
*
       BL   @PSUCCS
*
       B    *R12

ERR14  MOV  R1,R0
       LI   R1,ERR14N
       BLWP @MAKETX
*
       LI   R0,ERR14M
       LI   R1,ERR14O-ERR14M
       BLWP @PRINTL
*
       B    *R12
ERR14M TEXT 'Test 000E failed. '
       TEXT 'The old paragraph is not empty: '
ERR14N TEXT '....'
ERR14O
       EVEN


****************************************

* Interrupt routine to simulate key
* presses.
KEYINT
       MOV  @KEYSRC,R0
       MOV  @KEYSTE,R1
       MOV  R0,R2
       AI   R2,8
       C    R0,@KEYEND
       JHE  KEYINR
KEYIN1 CB   *R0,@UNDRLN
       JEQ  KEYIR2
       C    R1,@KEYSTX
       JHE  KEYINR
       MOVB *R0+,*R1+
       C    R0,R2
       JL   KEYIN1
KEYINR MOV  R0,@KEYSRC
       MOV  R1,@KEYSTE
       RT
KEYIR2 INC  R0
       JMP  KEYINR
* Contains the address at which the next
* simulated keystroke is found.
* Every time the interupt routine is hit
* take up to eight characters from the
* position starting at this address.
* At the end of the routine, the value
* of KEYSRC should be 8 bytes higher
* than when the routine started.
* The 8-byte block that starts >FF
* signals the end of simulated input,
* but let the INPUT routine worry about
* that.
KEYSRC DATA 0
KEYEND DATA 0
UNDRLN TEXT '_'
       EVEN

* Compare contents of R0 and R1.
* Report if they don't match.
*
* R0 - Actual value
* R1 - Expected value
* R2 - Address of six byte string
*      containing variable name
* R3 - test number
COMPVL
       C    R0,R1
       JEQ  COMPRT
*
       LI   R1,COMPM2+13
       BLWP @MAKETX
*
       MOV  R3,R0
       LI   R1,COMPMS+5
       BLWP @MAKETX
*
       LI   R1,COMPM1+9
       MOVB *R2+,*R1+
       MOVB *R2+,*R1+
       MOVB *R2+,*R1+
       MOVB *R2+,*R1+
       MOVB *R2+,*R1+
       MOVB *R2+,*R1+
*
       LI   R0,COMPMS
       LI   R1,COMPM3-COMPMS
       BLWP @PRINTL
*
       B    *R12
*
COMPRT RT
*
COMPMS TEXT 'Test .... failed. '
COMPM1 TEXT 'Value in ...... is wrong. '
COMPM2 TEXT 'Actual value .....'
COMPM3 EVEN


*
* Check that the strings match.
*
* Input:
* R0 - end of expected contents
* R1 - address of actual paragraph
*      contents
* R2 - address of expected paragraph
*      contents
* R3 - test number
STRCMP MOV  R2,R4
STRCM1 CB   *R1+,*R2+
       JNE  STRERR
       C    R2,R0
       JL   STRCM1
       RT

STRERR S    R4,R2
*
       MOV  R3,R0
       LI   R1,STRMS+5
       BLWP @MAKETX
*
       MOV  R2,R0
       LI   R1,STRMS2
       BLWP @MAKETX
*
       LI   R0,STRMS
       LI   R1,STRMS1-STRMS
       BLWP @PRINTL
*
       B    *R12
STRMS  TEXT 'Test .... failed. '
       TEXT 'Strings do not match at index '
STRMS2 TEXT '....'
STRMS1 EVEN

*
* Allocate space for first keystream of
* test.
*
FSTKS
       LI   R0,32
       BLWP @BUFALC
       MOV  R0,@KEYSTB
       MOV  R0,@KEYSTE
       AI   R0,32
       MOV  R0,@KEYSTX
       RT

PSUCCS MOV  R3,R0
       LI   R1,PSCCSM+5
       BLWP @MAKETX
       LI   R0,PSCCSM
       LI   R1,PSCCSE-PSCCSM
       BLWP @PRINTL
       RT
PSCCSM TEXT 'Test .... succeeded.'
       EVEN
PSCCSE


****************************************

SPACE  BSS  >2000
SPCEND

       END