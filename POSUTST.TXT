       DEF  TSTLST,RSLTFL
       REF  AEQ
* Update visual position indicators
       REF  POSUPD
*
       REF  LINLST
       REF  PARINX,CHRPAX
       REF  LININX,CHRLIX
       REF  WINOFF,WINPAR,WINLIN

TSTLST DATA TSTEND-TSTLST-2/8
* Calculate LININX and CHRLIX
* based on PARINX and CHRPAX
       DATA POS1
       TEXT 'POS1  '
* Calculate LININX and CHRLIX
* when cursor is at the beginning of
* paragraph.
       DATA POS2
       TEXT 'POS2  '
* Calculate LININX and CHRLIX
* when cursor is at the end of the
* paragraph.
       DATA POS3
       TEXT 'POS3  '
* Calculate LININX and CHRLIX
* when cursor is at the beginning of a
* line.
       DATA POS4
       TEXT 'POS4  '
* Calculate LININX and CHRLIX
* when cursor is at the end of a
* line.
       DATA POS5
       TEXT 'POS5  '
* Calculate LININX and CHRLIX
* based on first paragraph in the
* document.
       DATA POS6
       TEXT 'POS6  '
* Calculate LININX and CHRLIX
* based on last paragraph in the
* document.
       DATA POS7
       TEXT 'POS7  '
* Calculate LININX and CHRLIX
* based on only paragraph in the
* document.
       DATA POS8
       TEXT 'POS8  '
* Calculate LININX and CHRLIX
* based on a one-line paragraph.
       DATA POS9
       TEXT 'POS9  '
* Calculate LININX and CHRLIX
* based on an empty paragraph.
       DATA POSA
       TEXT 'POSA  '
* When CHRLIX is 12 and horizontal
* offset is 0, offset should not change.
       DATA HOF1
       TEXT 'HOF1  '
* When CHRLIX is 12 and horizontal
* offset is 20, offset should move left.
       DATA HOF2
       TEXT 'HOF2  '
* When CHRLIX is 12 and horizontal
* offset is 40, offset should move left.
       DATA HOF3
       TEXT 'HOF3  '
* When CHRLIX is 27 and horizontal
* offset is 0, offset should not change.
       DATA HOF4
       TEXT 'HOF4  '
* When CHRLIX is 27 and horizontal
* offset is 20, offset should not change.
       DATA HOF5
       TEXT 'HOF5  '
* When CHRLIX is 27 and horizontal
* offset is 40, offset should move left.
       DATA HOF6
       TEXT 'HOF6  '
* When CHRLIX is 66 and horizontal
* offset is 0, offset should move right.
       DATA HOF7
       TEXT 'HOF7  '
* When CHRLIX is 66 and horizontal
* offset is 20, offset should move right.
       DATA HOF8
       TEXT 'HOF8  '
* When CHRLIX is 66 and horizontal
* offset is 40, offset should not move.
       DATA HOF9
       TEXT 'HOF9  '
* When CHRLIX is 66 and horizontal
* offset is 60, offset should not move.
       DATA HOF10
       TEXT 'HOF10 '
* When CHRLIX is 59 and horizontal
* offset is 20, offset should not move.
       DATA HOF11
       TEXT 'HOF11 '
* When CHRLIX is 20 and horizontal
* offset is 20, offset should not move.
       DATA HOF12
       TEXT 'HOF12 '
* ---
* When cursor is at earlier paragraph
* than the screen's first paragraph, 
* scroll up.
       DATA WUP1
       TEXT 'WUP1  '
* When cursor is at a later paragraph
* than the screen, don't scroll up.
       DATA WUP2
       TEXT 'WUP2  '
* When the cursor and screen start at
* the same paragraph, but the cursor is
* on an earlier line, scroll up.
       DATA WUP3
       TEXT 'WUP3  '
* When the cursor and screen start at
* the same paragraph, but the cursor is
* on a later line, don't scroll up.
       DATA WUP4
       TEXT 'WUP4  '
* When the cursor and screen start at
* the same paragraph and line,
* don't scroll up.
       DATA WUP5
       TEXT 'WUP5  '

* ---

* When cursor-21 lines points to a 
* paragraph later than screen,
* scroll down.


TSTEND
RSLTFL BYTE RSLTFE-RSLTFL-1
       TEXT 'DSK2.TESTRESULT.TXT'
RSLTFE
       EVEN
FAKEAD DATA >FFFE

*
* Calculate LININX and CHRLIX
* based on PARINX and CHRPAX
*
POS1
* Arrange
       LI   R0,POS1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,53
       MOV  R0,@CHRPAX
* Act
       BLWP @POSUPD
* Assert
       LI   R0,1
       MOV  @LININX,R1
       LI   R2,POS1MS
       LI   R3,POS1ME-POS1MS
       BLWP @AEQ
       LI   R0,8
       MOV  @CHRLIX,R1
       LI   R2,POS1NS
       LI   R3,POS1NE-POS1NS
       BLWP @AEQ
       RT

*
* Calculate LININX and CHRLIX
* when cursor is at the beginning of
* paragraph.
*
POS2
       LI   R0,POS1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,0
       MOV  R0,@CHRPAX
       BLWP @POSUPD
*
       LI   R0,0
       MOV  @LININX,R1
       LI   R2,POS1MS
       LI   R3,POS1ME-POS1MS
       BLWP @AEQ
       LI   R0,0
       MOV  @CHRLIX,R1
       LI   R2,POS1NS
       LI   R3,POS1NE-POS1NS
       BLWP @AEQ
       RT

*
* Calculate LININX and CHRLIX
* when cursor is at the end of the
* paragraph.
*
POS3
       LI   R0,POS1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,45+41+45+46+33-1
       MOV  R0,@CHRPAX
       BLWP @POSUPD
*
       LI   R0,4
       MOV  @LININX,R1
       LI   R2,POS1MS
       LI   R3,POS1ME-POS1MS
       BLWP @AEQ
       LI   R0,32
       MOV  @CHRLIX,R1
       LI   R2,POS1NS
       LI   R3,POS1NE-POS1NS
       BLWP @AEQ
       RT

*
* Calculate LININX and CHRLIX
* when cursor is at the beginning of a
* line.
*
POS4
       LI   R0,POS1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,45+41+45+46
       MOV  R0,@CHRPAX
       BLWP @POSUPD
*
       LI   R0,4
       MOV  @LININX,R1
       LI   R2,POS1MS
       LI   R3,POS1ME-POS1MS
       BLWP @AEQ
       LI   R0,0
       MOV  @CHRLIX,R1
       LI   R2,POS1NS
       LI   R3,POS1NE-POS1NS
       BLWP @AEQ
       RT

*
* Calculate LININX and CHRLIX
* when cursor is at the end of a
* line.
*
POS5
       LI   R0,POS1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,45+41+45-1
       MOV  R0,@CHRPAX
       BLWP @POSUPD
*
       LI   R0,2
       MOV  @LININX,R1
       LI   R2,POS1MS
       LI   R3,POS1ME-POS1MS
       BLWP @AEQ
       LI   R0,44
       MOV  @CHRLIX,R1
       LI   R2,POS1NS
       LI   R3,POS1NE-POS1NS
       BLWP @AEQ
       RT

POS1MS TEXT 'Incorrect index of line within paragraph.'
POS1ME EVEN
POS1NS TEXT 'Incorrect index of character within line.'
POS1NE EVEN
*Line List
POS1L  DATA 4,1
       DATA FAKEAD
       DATA FAKEAD
       DATA POS1P
       DATA FAKEAD
POS1LE
POS1P  DATA 45+41+45+46+33
       DATA POS1W
       TEXT 'The Phoenician alphabet is an alphabet (more '
       TEXT 'specifically, an abjad) consisting of 22 '
       TEXT 'consonant letters only, leaving vowel sounds '
       TEXT 'implicit, although certain late varieties use '
       TEXT 'matres lectionis for some vowels.'
       EVEN
POS1PE
POS1PP DATA 44+40+28
       DATA POS1WB
	   TEXT 'abc ... xyz'
POS1W  DATA 4,1
       DATA 45
       DATA 45+41
       DATA 45+41+45
       DATA 45+41+45+46
POS1WB DATA 2,1
       DATA 44
	   DATA 44+40

*
* Calculate LININX and CHRLIX
* based on first paragraph in the
* document.
*
POS6
       LI   R0,POS6L
       MOV  R0,@LINLST
       LI   R0,0
       MOV  R0,@PARINX
       LI   R0,90
       MOV  R0,@CHRPAX
       BLWP @POSUPD
*
       LI   R0,2
       MOV  @LININX,R1
       LI   R2,POS1MS
       LI   R3,POS1ME-POS1MS
       BLWP @AEQ
*
       LI   R0,4
       MOV  @CHRLIX,R1
       LI   R2,POS1NS
       LI   R3,POS1NE-POS1NS
       BLWP @AEQ
       RT

*Line List
POS6L  DATA 3,1
       DATA POS6P
       DATA FAKEAD
       DATA FAKEAD
POS6LE
POS6P  DATA 45+41+45+46+33
       DATA POS6W
       TEXT 'The Phoenician alphabet is an alphabet (more '
       TEXT 'specifically, an abjad) consisting of 22 '
       TEXT 'consonant letters only, leaving vowel sounds '
       TEXT 'implicit, although certain late varieties use '
       TEXT 'matres lectionis for some vowels.'
       EVEN
POS6PE
POS6W  DATA 4,1
       DATA 45
       DATA 45+41
       DATA 45+41+45
       DATA 45+41+45+46
       
*
* Calculate LININX and CHRLIX
* based on last paragraph in the
* document.
*
POS7
       LI   R0,POS7L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,55
       MOV  R0,@CHRPAX
       BLWP @POSUPD
*
       LI   R0,1
       MOV  @LININX,R1
       LI   R2,POS1MS
       LI   R3,POS1ME-POS1MS
       BLWP @AEQ
*
       LI   R0,10
       MOV  @CHRLIX,R1
       LI   R2,POS1NS
       LI   R3,POS1NE-POS1NS
       BLWP @AEQ
       RT

*Line List
POS7L  DATA 3,1
       DATA FAKEAD
       DATA FAKEAD
       DATA POS7P
POS7LE
POS7P  DATA 45+41+45+46+33
       DATA POS7W
       TEXT 'The Phoenician alphabet is an alphabet (more '
       TEXT 'specifically, an abjad) consisting of 22 '
       TEXT 'consonant letters only, leaving vowel sounds '
       TEXT 'implicit, although certain late varieties use '
       TEXT 'matres lectionis for some vowels.'
       EVEN
POS7PE
POS7W  DATA 4,1
       DATA 45
       DATA 45+41
       DATA 45+41+45
       DATA 45+41+45+46
       
*
* Calculate LININX and CHRLIX
* based on only paragraph in the
* document.
*
POS8
       LI   R0,POS8L
       MOV  R0,@LINLST
       LI   R0,0
       MOV  R0,@PARINX
       LI   R0,45+41+17
       MOV  R0,@CHRPAX
       BLWP @POSUPD
*
       LI   R0,2
       MOV  @LININX,R1
       LI   R2,POS1MS
       LI   R3,POS1ME-POS1MS
       BLWP @AEQ
*
       LI   R0,17
       MOV  @CHRLIX,R1
       LI   R2,POS1NS
       LI   R3,POS1NE-POS1NS
       BLWP @AEQ
       RT

*Line List
POS8L  DATA 1,1
       DATA POS8P
POS8LE
POS8P  DATA 45+41+45+46+33
       DATA POS8W
       TEXT 'The Phoenician alphabet is an alphabet (more '
       TEXT 'specifically, an abjad) consisting of 22 '
       TEXT 'consonant letters only, leaving vowel sounds '
       TEXT 'implicit, although certain late varieties use '
       TEXT 'matres lectionis for some vowels.'
       EVEN
POS8PE
POS8W  DATA 4,1
       DATA 45
       DATA 45+41
       DATA 45+41+45
       DATA 45+41+45+46
       
*
* Calculate LININX and CHRLIX
* based on a one-line paragraph.
*
POS9
       LI   R0,POS9L
       MOV  R0,@LINLST
       LI   R0,3
       MOV  R0,@PARINX
       LI   R0,6
       MOV  R0,@CHRPAX
       BLWP @POSUPD
*
       LI   R0,0
       MOV  @LININX,R1
       LI   R2,POS1MS
       LI   R3,POS1ME-POS1MS
       BLWP @AEQ
       LI   R0,6
       MOV  @CHRLIX,R1
       LI   R2,POS1NS
       LI   R3,POS1NE-POS1NS
       BLWP @AEQ
       RT
       
*Line List
POS9L  DATA 6,1
       DATA FAKEAD
       DATA FAKEAD
       DATA FAKEAD
       DATA POS9P
       DATA FAKEAD
       DATA FAKEAD
POS9LE
POS9P  DATA 11
       DATA POS9W
       TEXT 'Jesus wept.'
       EVEN
POS9PE
POS9W  DATA 0,1

*
* Calculate LININX and CHRLIX
* based on an empty paragraph.
*
POSA
       LI   R0,POSAL
       MOV  R0,@LINLST
       LI   R0,3
       MOV  R0,@PARINX
       LI   R0,0
       MOV  R0,@CHRPAX
       BLWP @POSUPD
*
       LI   R0,0
       MOV  @LININX,R1
       LI   R2,POS1MS
       LI   R3,POS1ME-POS1MS
       BLWP @AEQ
       LI   R0,0
       MOV  @CHRLIX,R1
       LI   R2,POS1NS
       LI   R3,POS1NE-POS1NS
       BLWP @AEQ
       RT
       
*Line List
POSAL  DATA 6,1
       DATA FAKEAD
       DATA FAKEAD
       DATA FAKEAD
       DATA POSAP
       DATA FAKEAD
       DATA FAKEAD
POSALE
POSAP  DATA 11
       DATA POSAW
       TEXT ''
       EVEN
POSAPE
POSAW  DATA 0,1

*
* When CHRLIX is 12 and horizontal
* offset is 0, offset should not change.
*
HOF1
* Arrange
       LI   R0,HOF1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,112
       MOV  R0,@CHRPAX
	   LI   R0,0
	   MOV  R0,@WINOFF
* Act
       BLWP @POSUPD
* Assert
       LI   R0,0
       MOV  @WINOFF,R1
       LI   R2,OFCNS
       LI   R3,OFCNSE-OFCNS
       BLWP @AEQ
       RT
	   
*
* When CHRLIX is 12 and horizontal
* offset is 20, offset should move left.
*
HOF2
* Arrange
       LI   R0,HOF1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,112
       MOV  R0,@CHRPAX
	   LI   R0,20
	   MOV  R0,@WINOFF
* Act
       BLWP @POSUPD
* Assert
       LI   R0,0
       MOV  @WINOFF,R1
       LI   R2,OFLFT
       LI   R3,OFLFTE-OFLFT
       BLWP @AEQ
       RT
	   
*
* When CHRLIX is 12 and horizontal
* offset is 40, offset should move left.
*
HOF3
* Arrange
       LI   R0,HOF1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,112
       MOV  R0,@CHRPAX
	   LI   R0,40
	   MOV  R0,@WINOFF
* Act
       BLWP @POSUPD
* Assert
       LI   R0,0
       MOV  @WINOFF,R1
       LI   R2,OFLFT
       LI   R3,OFLFTE-OFLFT
       BLWP @AEQ
       RT	   

*
* When CHRLIX is 27 and horizontal
* offset is 0, offset should not change.
*
HOF4
* Arrange
       LI   R0,HOF1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,127
       MOV  R0,@CHRPAX
	   LI   R0,0
	   MOV  R0,@WINOFF
* Act
       BLWP @POSUPD
* Assert
       LI   R0,0
       MOV  @WINOFF,R1
       LI   R2,OFCNS
       LI   R3,OFCNSE-OFCNS
       BLWP @AEQ
       RT
	   
*
* When CHRLIX is 27 and horizontal
* offset is 20, offset should not change.
*
HOF5
* Arrange
       LI   R0,HOF1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,127
       MOV  R0,@CHRPAX
	   LI   R0,20
	   MOV  R0,@WINOFF
* Act
       BLWP @POSUPD
* Assert
       LI   R0,20
       MOV  @WINOFF,R1
       LI   R2,OFCNS
       LI   R3,OFCNSE-OFCNS
       BLWP @AEQ
       RT	   

*
* When CHRLIX is 27 and horizontal
* offset is 40, offset should move left.
*
HOF6
* Arrange
       LI   R0,HOF1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,127
       MOV  R0,@CHRPAX
	   LI   R0,40
	   MOV  R0,@WINOFF
* Act
       BLWP @POSUPD
* Assert
       LI   R0,20
       MOV  @WINOFF,R1
       LI   R2,OFLFT
       LI   R3,OFLFTE-OFLFT
       BLWP @AEQ
       RT

*
* When CHRLIX is 66 and horizontal
* offset is 0, offset should move right.
*
HOF7
* Arrange
       LI   R0,HOF1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,166
       MOV  R0,@CHRPAX
	   LI   R0,0
	   MOV  R0,@WINOFF
* Act
       BLWP @POSUPD
* Assert
       LI   R0,40
       MOV  @WINOFF,R1
       LI   R2,OFRGT
       LI   R3,OFRGTE-OFRGT
       BLWP @AEQ
       RT

*
* When CHRLIX is 66 and horizontal
* offset is 20, offset should move right.
*
HOF8
* Arrange
       LI   R0,HOF1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,166
       MOV  R0,@CHRPAX
	   LI   R0,20
	   MOV  R0,@WINOFF
* Act
       BLWP @POSUPD
* Assert
       LI   R0,40
       MOV  @WINOFF,R1
       LI   R2,OFRGT
       LI   R3,OFRGTE-OFRGT
       BLWP @AEQ
       RT

*
* When CHRLIX is 66 and horizontal
* offset is 40, offset should not move.
*
HOF9
* Arrange
       LI   R0,HOF1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,166
       MOV  R0,@CHRPAX
	   LI   R0,40
	   MOV  R0,@WINOFF
* Act
       BLWP @POSUPD
* Assert
       LI   R0,40
       MOV  @WINOFF,R1
       LI   R2,OFCNS
       LI   R3,OFCNSE-OFCNS
       BLWP @AEQ
       RT
	   
*
* When CHRLIX is 66 and horizontal
* offset is 60, offset should not move.
*
HOF10
* Arrange
       LI   R0,HOF1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,166
       MOV  R0,@CHRPAX
	   LI   R0,60
	   MOV  R0,@WINOFF
* Act
       BLWP @POSUPD
* Assert
       LI   R0,60
       MOV  @WINOFF,R1
       LI   R2,OFCNS
       LI   R3,OFCNSE-OFCNS
       BLWP @AEQ
       RT	

*
* When CHRLIX is 59 and horizontal
* offset is 20, offset should not move.
*
HOF11
* Arrange
       LI   R0,HOF1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,159
       MOV  R0,@CHRPAX
	   LI   R0,20
	   MOV  R0,@WINOFF
* Act
       BLWP @POSUPD
* Assert
       LI   R0,20
       MOV  @WINOFF,R1
       LI   R2,OFCNS
       LI   R3,OFCNSE-OFCNS
       BLWP @AEQ
       RT		   

*
* When CHRLIX is 20 and horizontal
* offset is 20, offset should not move.
*
HOF12
* Arrange
       LI   R0,HOF1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
       LI   R0,120
       MOV  R0,@CHRPAX
	   LI   R0,20
	   MOV  R0,@WINOFF
* Act
       BLWP @POSUPD
* Assert
       LI   R0,20
       MOV  @WINOFF,R1
       LI   R2,OFCNS
       LI   R3,OFCNSE-OFCNS
       BLWP @AEQ
       RT		   

OFLFT  TEXT 'Horizontal offset should have moved left.'
OFLFTE EVEN
OFCNS  TEXT 'Horizontal offset should not have changed.'
OFCNSE EVEN
OFRGT  TEXT 'Horizontal offset should have moved right.'
OFRGTE EVEN
*Line List
HOF1L  DATA 4,1
       DATA FAKEAD
       DATA FAKEAD
       DATA HOF1P
       DATA FAKEAD
HOF1LE
HOF1P  DATA 100+73
       DATA HOF1W
       TEXT '++++5++++1++++5++++2++++5++++3'
	   TEXT '++++5++++4++++5++++5++++5++++6'
	   TEXT '++++5++++7++++5++++8++++5++++9'
	   TEXT '++++5++++ '
       TEXT 'Play-fighting is fun for many puppies '
	   TEXT 'and helps them bond with other dogs.'
       EVEN
HOF1PE
HOF1W  DATA 1,1
       DATA 100

*
* When cursor is at earlier paragraph
* than the screen's first paragraph, 
* scroll up.
*
WUP1
* Arrange
       LI   R0,UP1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
* Line 3
       LI   R0,69+71+65+10
       MOV  R0,@CHRPAX
	   LI   R0,0
	   MOV  R0,@WINOFF
	   LI   R0,3
	   MOV  R0,@WINPAR
	   LI   R0,0
	   MOV  R0,@WINLIN
* Act
       BLWP @POSUPD
* Assert
       LI   R0,2
       MOV  @WINPAR,R1
       LI   R2,WUPM1
       LI   R3,WUPM1E-WUPM1
       BLWP @AEQ
*
       LI   R0,3
       MOV  @WINLIN,R1
       LI   R2,WUPM2
       LI   R3,WUPM2E-WUPM2
       BLWP @AEQ
       RT

*
* When cursor is at a later paragraph
* than the screen, don't scroll up.
*
WUP2
* Arrange
       LI   R0,UP1L
       MOV  R0,@LINLST
       LI   R0,2
       MOV  R0,@PARINX
* Line 3
       LI   R0,69+71+65+10
       MOV  R0,@CHRPAX
	   LI   R0,0
	   MOV  R0,@WINOFF
	   LI   R0,2
	   MOV  R0,@WINPAR
	   LI   R0,2
	   MOV  R0,@WINLIN
* Act
       BLWP @POSUPD
* Assert
       LI   R0,2
       MOV  @WINPAR,R1
       LI   R2,WUPM1
       LI   R3,WUPM1E-WUPM1
       BLWP @AEQ
*
       LI   R0,2
       MOV  @WINLIN,R1
       LI   R2,WUPM2
       LI   R3,WUPM2E-WUPM2
       BLWP @AEQ
       RT

*
* When the cursor and screen start at
* the same paragraph, but the cursor is
* on an earlier line, scroll up.
*
WUP3
* Arrange
       LI   R0,UP1L
       MOV  R0,@LINLST
       LI   R0,1
       MOV  R0,@PARINX
* Line Index 5
       LI   R0,70+66+69+72+67+3
       MOV  R0,@CHRPAX
	   LI   R0,0
	   MOV  R0,@WINOFF
	   LI   R0,1
	   MOV  R0,@WINPAR
	   LI   R0,6
	   MOV  R0,@WINLIN
* Act
       BLWP @POSUPD
* Assert
       LI   R0,1
       MOV  @WINPAR,R1
       LI   R2,WUPM1
       LI   R3,WUPM1E-WUPM1
       BLWP @AEQ
*
       LI   R0,5
       MOV  @WINLIN,R1
       LI   R2,WUPM2
       LI   R3,WUPM2E-WUPM2
       BLWP @AEQ
       RT

*
* When the cursor and screen start at
* the same paragraph, but the cursor is
* on a later line, don't scroll up.
*
WUP4
* Arrange
       LI   R0,UP1L
       MOV  R0,@LINLST
       LI   R0,1
       MOV  R0,@PARINX
* Line Index 5
       LI   R0,70+66+69+72+67+3
       MOV  R0,@CHRPAX
	   LI   R0,0
	   MOV  R0,@WINOFF
	   LI   R0,1
	   MOV  R0,@WINPAR
	   LI   R0,4
	   MOV  R0,@WINLIN
* Act
       BLWP @POSUPD
* Assert
       LI   R0,1
       MOV  @WINPAR,R1
       LI   R2,WUPM1
       LI   R3,WUPM1E-WUPM1
       BLWP @AEQ
*
       LI   R0,4
       MOV  @WINLIN,R1
       LI   R2,WUPM2
       LI   R3,WUPM2E-WUPM2
       BLWP @AEQ
       RT

*
* When the cursor and screen start at
* the same paragraph and line,
* don't scroll up.
*
WUP5
* Arrange
       LI   R0,UP1L
       MOV  R0,@LINLST
       LI   R0,1
       MOV  R0,@PARINX
* Line Index 5
       LI   R0,70+66+69+72+67+3
       MOV  R0,@CHRPAX
	   LI   R0,0
	   MOV  R0,@WINOFF
	   LI   R0,1
	   MOV  R0,@WINPAR
	   LI   R0,5
	   MOV  R0,@WINLIN
* Act
       BLWP @POSUPD
* Assert
       LI   R0,1
       MOV  @WINPAR,R1
       LI   R2,WUPM1
       LI   R3,WUPM1E-WUPM1
       BLWP @AEQ
*
       LI   R0,5
       MOV  @WINLIN,R1
       LI   R2,WUPM2
       LI   R3,WUPM2E-WUPM2
       BLWP @AEQ
       RT

WUPM1  TEXT 'Window Paragraph Index was '
       TEXT 'updated correctly.'
WUPM1E
WUPM2  TEXT 'Window Paragraph-Line index '
       TEXT 'was not updated correctly.'
WUPM2E
*Line List
UP1L   DATA 4,1
       DATA UP1P0
       DATA UP1P1
	   DATA UP1P2
	   DATA UP1P3
       DATA FAKEAD
       DATA FAKEAD
UP1LE
*paragraphs
UP1P0  DATA 68+71+9
       DATA UP1W0
       TEXT 'In the beg...end.'
       EVEN
UP1P1  DATA 70+66+69+72+67+71+24
       DATA UP1W1
       TEXT 'In the beg...end.'
       EVEN
UP1P2  DATA 69+71+65+42
       DATA UP1W2
       TEXT 'In the beg...end.'
       EVEN
UP1P3  DATA 70+68+72+69+66+4
       DATA UP1W3
       TEXT 'In the beg...end.'
       EVEN
*A wrap list
UP1W0  DATA 2,1
       DATA 68
	   DATA 68+71
UP1W1  DATA 6,1
       DATA 70
	   DATA 70+66
	   DATA 70+66+69
	   DATA 70+66+69+72
	   DATA 70+66+69+72+67
	   DATA 70+66+69+72+67+71
UP1W2  DATA 3,1
       DATA 69
	   DATA 69+71
	   DATA 69+71+65
UP1W3  DATA 5,1
       DATA 70
	   DATA 70+68
	   DATA 70+68+72
	   DATA 70+68+72+69
	   DATA 70+68+72+69+66
	   
       END