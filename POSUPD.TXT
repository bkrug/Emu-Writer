       DEF  POSUPD
*
       REF  POSUWS
*
       REF  LINLST
       REF  ARYADR
       REF  PARINX,CHRPAX
	   REF  LININX,CHRLIX
       REF  WINOFF,WINPAR,WINLIN

       TEXT 'POSUPD'	   
POSUPD DATA POSUWS,POSUPD+4
       BL   @UPINDX
	   BL   @UPWOFF
       RTWP

*
* Update LININX and CHRLIX
*
UPINDX
* Let R1 = address of current paragraph
       MOV  @LINLST,R0
	   C    *R0+,*R0+
	   MOV  @PARINX,R1
	   SLA  R1,1
	   A    R0,R1
	   MOV  *R1,R1
* R2 = addres of wrap list's first element
       MOV  @2(1),R2
	   C    *R2+,*R2+
* R3 = index of first line in paragraph
* R4 = character within paragraph
       CLR  R3
       MOV  @CHRPAX,R4
* Change R3 to current line in para
* Change R4 to current char in line
POS1   C    R4,*R2
	   JL   POS2
	   INC  R3
	   INCT R2
	   JMP  POS1
* If cursor is not on first line,
* subtract wrap position from R4
POS2   MOV  R3,R3
       JEQ  POS3
	   DECT R2
       S    *R2,R4
*
POS3   MOV  R3,@LININX
       MOV  R4,@CHRLIX
	   RT

*
* Update Window horizontal offset.
*
UPWOFF
* Let R1 equal half of the window size
       LI   R1,20
* If window is to the right of the
* cursor, move it left.
UPW0   C    @WINOFF,@CHRLIX
	   JLE  UPW1
	   S    R1,@WINOFF   
	   JMP  UPW0
* If window is to the left of the
* cursor, move it right.
UPW1   MOV  @CHRLIX,R0
       AI   R0,-40
UPW2   C    @WINOFF,R0
	   JGT  UPW3
	   A    R1,@WINOFF
       JMP  UPW2
*
UPW3   RT

       END